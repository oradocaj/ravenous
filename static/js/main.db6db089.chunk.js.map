{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","components/Autocomplete/Autocomplete.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","className","href","this","props","business","businessUrl","target","rel","src","imageSrc","alt","name","address0","address1","country","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","handleSortByChange","handleKeyPress","handleSortKeyPress","sortByOptions","sortByOption","setState","event","value","searchYelp","preventDefault","key","btn","click","Object","keys","sortByOptionValue","onMouseDown","onClick","getSortByClass","renderSortByOptions","placeholder","onChange","onKeyPress","ref","node","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","zip_code","categories","title","review_count","url","display_address","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db6db089.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <a href={this.props.business.businessUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                        <img src={this.props.business.imageSrc} alt=''/>\r\n                    </a>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <a href={`http://maps.google.com/?q=${this.props.business.address0}, ${this.props.business.address1}, ${this.props.business.country}`} target=\"_blank\" rel=\"noreferrer\">\r\n                            <p>{this.props.business.address}</p>\r\n                        </a>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category.toUpperCase()}</h3>\r\n                        <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n                        <p>{this.props.business.reviewCount} reviews</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map(business => {\r\n                        return <Business key={business.id} business={business}/>;\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default BusinessList;\r\n","//import { resetWarningCache } from 'prop-types';\r\nimport React from 'react';\r\nimport Autocomplete from '../Autocomplete/Autocomplete.js';\r\nimport '../Autocomplete/Autocomplete.css';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      term: '',\r\n      location: '',\r\n      sortBy: 'best_match'      \r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleSortByChange = this.handleSortByChange.bind(this);    \r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleSortKeyPress = this.handleSortKeyPress.bind(this);\r\n    \r\n    this.sortByOptions = {\r\n      'Best Match':'best_match',\r\n      'Highest Rated':'rating',\r\n      'Most Reviewed':'review_count'  \r\n    };\r\n  }\r\n\r\n  getSortByClass (sortByOption) {\r\n    if (this.state.sortBy === sortByOption) {\r\n      return 'active';\r\n    } else {\r\n      return '';\r\n    };\r\n  }\r\n  \r\n  handleSortByChange (sortByOption) {\r\n    this.setState({\r\n      sortBy: sortByOption\r\n    });\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({\r\n      term: event.target.value\r\n    });\r\n  }\r\n  \r\n  handleLocationChange(event) {\r\n    this.setState({\r\n      location: event.target.value\r\n    });\r\n  }  \r\n  \r\n  handleSearch (event) {\r\n    if (this.state.term && this.state.location) {\r\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    } event.preventDefault()\r\n  }\r\n  \r\n  handleKeyPress (event) {\r\n    if (event.key === 'Enter') {\r\n      //console.log('Enter clicked!');     \r\n      this.btn.click();\r\n    };\r\n  }\r\n  \r\n  handleSortKeyPress () {\r\n      //console.log('Mouse clicked!');\r\n      this.btn.click();\r\n      \r\n  }\r\n  \r\n  renderSortByOptions () {\r\n    return Object.keys(this.sortByOptions).map(sortByOption => {\r\n      let sortByOptionValue = this.sortByOptions[sortByOption];\r\n      return <li onMouseDown={this.handleSortByChange.bind(this, sortByOptionValue)} onClick={this.handleSortKeyPress} className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue}>{sortByOption}</li>\r\n    });\r\n  }\r\n  \r\n  render() {    \r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>\r\n            {this.renderSortByOptions()}\r\n          </ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} onKeyPress={this.handleKeyPress} />\r\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange} onKeyPress={this.handleKeyPress} />\r\n          { /*<Autocomplete suggestions={[\"Asian\", \"British\", \"Italian\", \"American\", \"Indian\"]} placeholder=\"Search Businesses\" handleTermChange={this.handleTermChange} onKeyPress={this.handleKeyPress} />\r\n          <Autocomplete suggestions={[\"Rome\", \"Paris\", \"London\", \"Berlin\", \"Madrid\"]} placeholder=\"Where?\" onChange={this.handleTermChange} onKeyPress={this.handleKeyPress} />*/ }\r\n        </div>\r\n        <div className=\"SearchBar-submit\">\r\n          <a onClick={this.handleSearch} ref={node => (this.btn = node)}>Let's Go</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React , { Component } from 'react';\r\nimport '../SearchBar/SearchBar.css'\r\nimport './Autocomplete.css';\r\n\r\nclass Autocomplete extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: \"\"\r\n      };      \r\n    }\r\n    \r\n    onChange = e => {\r\n        const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n      \r\n        const filteredSuggestions = suggestions.filter(\r\n        suggestion =>\r\n          suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n      \r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          filteredSuggestions,\r\n          showSuggestions: true,\r\n          userInput: e.currentTarget.value\r\n        });\r\n    };\r\n    \r\n    onClick = e => {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: e.currentTarget.innerText\r\n      });\r\n    };\r\n\r\n    onKeyDown = e => {\r\n      const { activeSuggestion, filteredSuggestions } = this.state;\r\n    \r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n            activeSuggestion: 0,\r\n            showSuggestions: false,\r\n            userInput: filteredSuggestions[activeSuggestion]\r\n            });\r\n        } else if (e.keyCode === 38) {\r\n            if (activeSuggestion === 0) {\r\n            return;\r\n        }\r\n        this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n        }\r\n        // User pressed the down arrow, increment the index\r\n        else if (e.keyCode === 40) {\r\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n            return;\r\n            }\r\n            this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            onClick,\r\n            onKeyDown,\r\n            state: {\r\n                activeSuggestion,\r\n                filteredSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n      \r\n        let suggestionsListComponent;\r\n        \r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <ul class=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                        let className;\r\n        \r\n                        // Flag the active suggestion with a class\r\n                        if (index === activeSuggestion) {\r\n                        className = \"suggestion-active\";\r\n                    }\r\n                    return (\r\n                        <li className={className} key={suggestion} onClick={onClick}>\r\n                            {suggestion}\r\n                        </li>\r\n                    );\r\n                    })}\r\n                    </ul>\r\n            );\r\n          } else {\r\n            suggestionsListComponent = (\r\n                <div class=\"no-suggestions\">\r\n                    <em>No suggestions available.</em>\r\n                </div>\r\n            );\r\n          }\r\n        }\r\n        console.log('props', this.props)\r\n        return (\r\n            <div className='input-autocomplete'>\r\n                <input\r\n                    placeholder={this.props.placeholder}\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    onKeyDown={onKeyDown}\r\n                    value={userInput}                \r\n                />\r\n                {suggestionsListComponent}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n      \r\nexport default Autocomplete;\r\n","//import SearchBar from \"../components/SearchBar/SearchBar\";\r\n\r\nconst apiKey = 'aX7GAc_9jplR5S9a1pDJ-BbI6OPpErnvhFSdoZIonOTz8h-0VQeKQIfvN2Pe2DNLwtGl-m0SVnrdT8wnhd8EKefBirEuOASXzZkIMOSsI7dm8YrQP74tmXdZUF8iYXYx'\r\n\r\nconst Yelp = {\r\n    search(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${apiKey}`\r\n            }\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((jsonResponse) => {\r\n            if (jsonResponse.businesses) {\r\n                return jsonResponse.businesses.map(business => {\r\n                    console.log(business);\r\n                    return {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count,\r\n                        businessUrl: business.url,\r\n                        address0: business.location.display_address[0],\r\n                        address1: business.location.display_address[1],\r\n                        country: business.location.country,\r\n                    };\r\n                });\r\n            };\r\n        });\r\n    }\r\n};\r\n\r\nexport default Yelp;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport BusinessList from '../BusinessList/BusinessList';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nimport Yelp from '../../util/Yelp';\r\n\r\n//API simulator object\r\n/*const business = {\r\n  imageSrc: 'https://content.codecademy.com/programs/react/ravenous/pizza.jpg',\r\n  name: 'MarginOtto Pizzeria',\r\n  address: '1010 Paddington Way',\r\n  city: 'Flavortown',\r\n  state: 'NY',\r\n  zipCode: '10101',\r\n  category: 'Italian',\r\n  rating: 4.5,\r\n  reviewCount: 90\r\n};\r\n\r\nconst businesses = [\r\n  business,\r\n  business,\r\n  business,\r\n  business,\r\n  business,\r\n  business\r\n];\r\n*/\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      businesses: [],\r\n    };\r\n\r\n    this.searchYelp = this.searchYelp.bind(this);\r\n  }\r\n\r\n  searchYelp(term, location, sortBy) {\r\n    //console.log(`Searching Yelp with ${term}, ${location}, ${sortBy}`)\r\n    Yelp.search(term, location, sortBy).then((businesses) => {\r\n      this.setState({\r\n        businesses: businesses\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n          {<SearchBar searchYelp={this.searchYelp} />}\r\n          {<BusinessList businesses={this.state.businesses} />}          \r\n      </div>\r\n    );\r\n  }\r\n  \r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}